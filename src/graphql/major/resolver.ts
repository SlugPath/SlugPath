import { MajorService } from "./service";
import { Arg, Mutation, Query, Resolver } from "type-graphql";
import { Major, MajorInput } from "./schema";

/**
 * CourseResolver is a Resolver class that provides custom functionality for
 * courses, which cannot be generated by Prisma
 */
@Resolver()
export class MajorResolver {
  /**
   * @returns a unique `Major` associated with a userId
   */
  @Query(() => Major)
  async getUserMajor(@Arg("userId") userId: string): Promise<Major | null> {
    return await new MajorService().getUserMajor(userId);
  }

  /**
   * Updates or creates a new major and associates it with a userId
   * @param major is a type containing a students' major information
   * @returns the user id upon success
   */
  @Mutation(() => Major)
  async updateUserMajor(@Arg("major") major: MajorInput): Promise<string> {
    return await new MajorService().updateUserMajor(major);
  }
}
